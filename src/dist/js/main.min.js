"use strict";document.getElementById("get-full-data").addEventListener("click",getDataByName),document.getElementById("get-one-employee").addEventListener("click",getDataByName),document.getElementById("clear-list").addEventListener("click",getDataByName);let idCounter=0,buttonId="btn-id_";class GetData{constructor(){this.URL_SERVER="https://jsonplaceholder.typicode.com/users"}async employeeData(e){const t=await fetch(e);return this.data=await t.json(),this.data}}class Render extends GetData{constructor(){super(),this.listContainer=document.querySelector(".employees-container"),this.searchName=document.querySelector(".search-employee__input").value,this.employeeList=document.querySelector(".employees-container__list"),this.listElementHeightModifier=this.listElementHeightModifier.bind(this),this.employeeList.addEventListener("click",this.listElementHeightModifier)}listElementHeightModifier(e){return console.log(this.employeeList.firstChild),e.target.classList.contains(this.detailsButtonClass)&&e.target.closest(`.${this.listElement}`).classList.toggle(this.listElementModifier),e.target}createDOMElement(e,t,s,i){const a=document.createElement(e);return a.classList.add(t),s&&(a.id=`${this.createId(s)}`),i&&(a.textContent=i),a}createId(e){return e+ ++idCounter}addCreatedElementsToList(e,...t){return t.forEach(t=>e.appendChild(t)),e}}class Filter extends Render{constructor(){super(),this.listElement="employees-container__list-element",this.listElementModifier="employees-container__list-element--active",this.detailsButtonClass="list__button",this.employeeName="list__employee-name",this.emptyFile="Employee not found"}async getAllEmployee(){return await this.employeeData(this.URL_SERVER),this.data.forEach(e=>{this.addCreatedElementsToList(this.employeeList,this.addCreatedElementsToList(this.createDOMElement("li",this.listElement),this.createDOMElement("p",this.employeeName,void 0,e.name),this.createDOMElement("button",this.detailsButtonClass,buttonId,"details")))}),this.employeeList}async getEmployeeByName(){return await this.employeeData(this.URL_SERVER),""===this.searchName?this.addCreatedElementsToList(this.employeeList,this.addCreatedElementsToList(this.createDOMElement("li",this.listElement),this.createDOMElement("p",this.employeeName,void 0,this.emptyFile))):this.data.forEach(e=>{e.name.toLowerCase().includes(this.searchName.toLowerCase())&&this.addCreatedElementsToList(this.employeeList,this.addCreatedElementsToList(this.createDOMElement("li",this.listElement),this.createDOMElement("p",this.employeeName,void 0,e.name),this.createDOMElement("button",this.detailsButtonClass,buttonId,"details")))}),this.data}}class Remover extends Render{constructor(){super(),this.clearPage()}clearPage(){for(;this.employeeList.firstChild;)this.employeeList.removeChild(this.employeeList.firstChild)}}function getDataByName(e){const t=new Filter;e.target.classList.contains("search-employee__button")?t.getEmployeeByName(e):e.target.classList.contains("properties-container__load-list")?t.getAllEmployee():new Remover}